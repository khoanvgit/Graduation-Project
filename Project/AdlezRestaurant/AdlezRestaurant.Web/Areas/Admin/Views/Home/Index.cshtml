@using AdlezRestaurant.Web.Areas.Admin.ViewModels
@model Statistics

<!-- Page Heading -->
<div class="d-sm-flex align-items-center justify-content-between mb-4">
    <h1>Dashboard</h1>
    <a href="#" class="d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm" style="display: none !important;">
        <i class="fas fa-download fa-sm text-white-50"></i> Generate Report
    </a>
</div>

<div class="row">
    <div class="col-xl-3 col-md-6 mb-4">
        <div class="card border-left-primary shadow h-100 py-2">
            <div class="card-body">
                <div class="row no-gutters align-items-center">
                    <div class="col mr-2">
                        <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">
                            Orders (Today)
                        </div>
                        <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.Orders</div>
                    </div>
                    <div class="col-auto">
                        <i class="fas fa-calendar fa-2x text-gray-300"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-xl-3 col-md-6 mb-4">
        <div class="card border-left-success shadow h-100 py-2">
            <div class="card-body">
                <div class="row no-gutters align-items-center">
                    <div class="col mr-2">
                        <div class="text-xs font-weight-bold text-success text-uppercase mb-1">
                            Earnings (Today)
                        </div>
                        <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.Revenue.ToString("C2")</div>
                    </div>
                    <div class="col-auto">
                        <i class="fas fa-dollar-sign fa-2x text-gray-300"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-xl-3 col-md-6 mb-4">
        <div class="card border-left-info shadow h-100 py-2">
            <div class="card-body">
                <div class="row no-gutters align-items-center">
                    <div class="col mr-2">
                        <div class="text-xs font-weight-bold text-info text-uppercase mb-1">
                            Customers (Today)
                        </div>
                        <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.Customers</div>
                    </div>
                    <div class="col-auto">
                        <i class="fas fa-users fa-2x text-gray-300"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-xl-3 col-md-6 mb-4">
        <div class="card border-left-warning shadow h-100 py-2">
            <div class="card-body">
                <div class="row no-gutters align-items-center">
                    <div class="col mr-2">
                        <div class="text-xs font-weight-bold text-warning text-uppercase mb-1">
                            Reservation Requests
                        </div>
                        @if (ViewBag.reservationCount != null)
                        {
                            <div class="h5 mb-0 font-weight-bold text-gray-800">@ViewBag.reservationCount</div>
                        }
                        else
                        {
                            <div class="h5 mb-0 font-weight-bold text-gray-800">0</div>
                        }
                    </div>
                    <div class="col-auto">
                        <i class="fas fa-chair fa-2x text-gray-300"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-xl-8 col-lg-7" style="position: relative;">
        <div class="card shadow mb-4">
            <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                <h6 class="m-0 font-weight-bold text-primary">Earnings Overview</h6>
                <div>
                    <select class="form-control" onchange="updateChart(this)">
                        @for (int i = 2019; i <= DateTime.Today.Year; i++)
                        {
                            if (TempData["choosenYear"] == null)
                            {
                                if (i == DateTime.Today.Year)
                                {
                                    <option value="@i" selected="selected">@i</option>
                                }
                                else
                                {
                                    <option value="@i">@i</option>
                                }
                            }
                            else
                            {
                                if (i == int.Parse(TempData["choosenYear"].ToString()))
                                {
                                    <option value="@i" selected="selected">@i</option>
                                }
                                else
                                {
                                    <option value="@i">@i</option>
                                }
                            }
                        }
                    </select>
                </div>
                <div class="dropdown no-arrow">
                    <a class="dropdown-toggle" href="#" role="button" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        <i class="fas fa-ellipsis-v fa-sm fa-fw text-gray-400"></i>
                    </a>
                    <div class="dropdown-menu dropdown-menu-right shadow animated--fade-in" aria-labelledby="dropdownMenuLink">
                        <div class="dropdown-header">Show options</div>
                        <a class="dropdown-item" href='@Url.Action("GreatYear","Home", new{Area = "Admin"})'>Great year</a>
                        <a class="dropdown-item" href='@Url.Action("GreatYear","Home", new{Area = "Admin", year = DateTime.Now.Year})'>This year</a>
                    </div>
                </div>
            </div>
            <div class="card-body">
                <div class="chart-area">
                    <div class="chartjs-size-monitor"><div class="chartjs-size-monitor-expand"><div class=""></div></div><div class="chartjs-size-monitor-shrink"><div class=""></div></div></div>
                    <canvas id="myAreaChart" style="display: block; width: 1037px; height: 320px;" width="1037" height="320" class="chartjs-render-monitor"></canvas>
                    <div id="mydiv" style="position: absolute; width: 200px !important; top: 0; right: 20px;" class="border rounded">
                        <!-- Include a header DIV with the same name as the draggable DIV, followed by "header" -->
                        <div id="mydivheader" class="bg-info text-light border-bottom p-3 text-center"><i class="fas fa-arrows-alt"></i></div>
                        <p class="p-3 bg-white pb-0 mb-0">
                            @if (ViewBag.totalYearRevenue != null)
                            {
                                <strong>Total revenue: <span>@ViewBag.totalYearRevenue</span></strong>
                            }
                            else
                            {
                                <strong>$0</strong>
                            }
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Pie Chart -->
    <div class="col-xl-4 col-lg-5">
        <div class="card shadow mb-4">
            <!-- Card Header - Dropdown -->
            <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                <h6 class="m-0 font-weight-bold text-primary">Specific info</h6>
            </div>
            <!-- Card Body -->
            <div class="card-body">
                <div class="mt-4 container">
                    <div class="col-12">
                        <div class="border-bottom">
                            <div class="col-12">
                                <div class="row">
                                    <select class="form-control mb-2" onchange="searchOpt(this)">
                                        <option value="1">Search by date</option>
                                        <option value="2">Search by month</option>
                                    </select>
                                </div>
                                <div class="row justify-content-center">
                                    <form id="searchByDate" asp-action="SpecificTimeByDate" onsubmit="return showStatisticReport(this)" autocomplete="off">
                                        <div class="input-group mb-3">
                                            <input name="searchDate" type="date" class="form-control" />
                                            <div class="input-group-append">
                                                <button class="btn btn-primary" type="submit">Search</button>
                                            </div>
                                        </div>
                                    </form>
                                </div>
                                <div class="row justify-content-center">
                                    <form id="searchByMonth" asp-action="SpecificTimeByMonth" onsubmit="return showStatisticReport(this)" autocomplete="off">
                                        <div class="input-group mb-3">
                                            <input name="searchMonth" type="month" class="form-control" />
                                            <div class="input-group-append">
                                                <button class="btn btn-primary" type="submit">Search</button>
                                            </div>
                                        </div>
                                    </form>
                                </div>
                            </div>
                        </div>
                        <div style="min-height: 200px;" id="statisticReport">
                            @await Html.PartialAsync("StatisticReport", Model)
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-lg-12 mb-4">
        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">TOP 5 dishes of all time</h6>
            </div>
            <div class="card-body">
                @foreach (var item in ViewBag.top5)
                {
                    if (ViewData[$"name{item}"] != null && ViewData[$"percent{item}"] != null)
                    {
                        string dishName = ViewData[$"name{item}"].ToString();
                        string percentTop = ViewData[$"percent{item}"].ToString();
                        <h4 class="small font-weight-bold">
                            @dishName <span class="float-right">@percentTop%</span>
                        </h4>
                        <div class="progress mb-4">
                            <div class="progress-bar bg-success" role="progressbar" style="width: @percentTop%"
                         aria-valuenow="@percentTop" aria-valuemin="0" aria-valuemax="100"></div>
                        </div>
                    }
                }
            </div>
        </div>
    </div>
</div>

@section Scripts{
<script>
                // Set new default font family and font color to mimic Bootstrap's default styling
        Chart.defaults.global.defaultFontFamily = 'Nunito', '-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif';
        Chart.defaults.global.defaultFontColor = '#858796';

        var months = @Html.Raw(Json.Serialize(ViewBag.months));
        var revenues = @Html.Raw(Json.Serialize(ViewBag.revenues));

        function number_format(number, decimals, dec_point, thousands_sep) {
          // *     example: number_format(1234.56, 2, ',', ' ');
          // *     return: '1 234,56'
          number = (number + '').replace(',', '').replace(' ', '');
          var n = !isFinite(+number) ? 0 : +number,
            prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),
            sep = (typeof thousands_sep === 'undefined') ? ',' : thousands_sep,
            dec = (typeof dec_point === 'undefined') ? '.' : dec_point,
            s = '',
            toFixedFix = function(n, prec) {
              var k = Math.pow(10, prec);
              return '' + Math.round(n * k) / k;
            };
          // Fix for IE parseFloat(0.55).toFixed(0) = 0;
          s = (prec ? toFixedFix(n, prec) : '' + Math.round(n)).split('.');
          if (s[0].length > 3) {
            s[0] = s[0].replace(/\B(?=(?:\d{3})+(?!\d))/g, sep);
          }
          if ((s[1] || '').length < prec) {
            s[1] = s[1] || '';
            s[1] += new Array(prec - s[1].length + 1).join('0');
          }
          return s.join(dec);
        }

        // Area Chart Example
        var ctx = document.getElementById("myAreaChart");
        var myLineChart = new Chart(ctx, {
          type: 'line',
          data: {
            labels: months,
            datasets: [{
              label: "Earnings",
              lineTension: 0.3,
              backgroundColor: "rgba(78, 115, 223, 0.05)",
              borderColor: "rgba(78, 115, 223, 1)",
              pointRadius: 3,
              pointBackgroundColor: "rgba(78, 115, 223, 1)",
              pointBorderColor: "rgba(78, 115, 223, 1)",
              pointHoverRadius: 3,
              pointHoverBackgroundColor: "rgba(78, 115, 223, 1)",
              pointHoverBorderColor: "rgba(78, 115, 223, 1)",
              pointHitRadius: 10,
              pointBorderWidth: 2,
              data: revenues,
            }],
          },
          options: {
            maintainAspectRatio: false,
            layout: {
              padding: {
                left: 10,
                right: 25,
                top: 25,
                bottom: 0
              }
            },
            scales: {
              xAxes: [{
                time: {
                  unit: 'date'
                },
                gridLines: {
                  display: false,
                  drawBorder: false
                },
                ticks: {
                  maxTicksLimit: 7
                }
              }],
              yAxes: [{
                ticks: {
                  maxTicksLimit: 5,
                  padding: 10,
                  // Include a dollar sign in the ticks
                  callback: function(value, index, values) {
                    return '$' + number_format(value);
                  }
                },
                gridLines: {
                  color: "rgb(234, 236, 244)",
                  zeroLineColor: "rgb(234, 236, 244)",
                  drawBorder: false,
                  borderDash: [2],
                  zeroLineBorderDash: [2]
                }
              }],
            },
            legend: {
              display: false
            },
            tooltips: {
              backgroundColor: "rgb(255,255,255)",
              bodyFontColor: "#858796",
              titleMarginBottom: 10,
              titleFontColor: '#6e707e',
              titleFontSize: 14,
              borderColor: '#dddfeb',
              borderWidth: 1,
              xPadding: 15,
              yPadding: 15,
              displayColors: false,
              intersect: false,
              mode: 'index',
              caretPadding: 10,
              callbacks: {
                label: function(tooltipItem, chart) {
                  var datasetLabel = chart.datasets[tooltipItem.datasetIndex].label || '';
                  return datasetLabel + ': $' + number_format(tooltipItem.yLabel);
                }
              }
            }
          }
        });

        function updateChart(ele){
            location.href = "/Admin/Home/Index?year=" + ele.value;
        }

        // Make the DIV element draggable:
    dragElement(document.getElementById("mydiv"));

    function dragElement(elmnt) {
      var pos1 = 0, pos2 = 0, pos3 = 0, pos4 = 0;
      if (document.getElementById(elmnt.id + "header")) {
        // if present, the header is where you move the DIV from:
        document.getElementById(elmnt.id + "header").onmousedown = dragMouseDown;
      } else {
        // otherwise, move the DIV from anywhere inside the DIV:
        elmnt.onmousedown = dragMouseDown;
      }

      function dragMouseDown(e) {
        e = e || window.event;
        e.preventDefault();
        // get the mouse cursor position at startup:
        pos3 = e.clientX;
        pos4 = e.clientY;
        document.onmouseup = closeDragElement;
        // call a function whenever the cursor moves:
        document.onmousemove = elementDrag;
      }

      function elementDrag(e) {
        e = e || window.event;
        e.preventDefault();
        // calculate the new cursor position:
        pos1 = pos3 - e.clientX;
        pos2 = pos4 - e.clientY;
        pos3 = e.clientX;
        pos4 = e.clientY;
        // set the element's new position:
        elmnt.style.top = (elmnt.offsetTop - pos2) + "px";
        elmnt.style.left = (elmnt.offsetLeft - pos1) + "px";
      }

      function closeDragElement() {
        // stop moving when mouse button is released:
        document.onmouseup = null;
        document.onmousemove = null;
      }
    }
    document.getElementById("searchByMonth").setAttribute("hidden", "hidden");
    function searchOpt(ele){
        if(ele.value == 1){
            document.getElementById("searchByDate").removeAttribute("hidden");
            document.getElementById("searchByMonth").setAttribute("hidden", "hidden");
        }
        else if(ele.value == 2){
            document.getElementById("searchByDate").setAttribute("hidden", "hidden");
            document.getElementById("searchByMonth").removeAttribute("hidden");
        }
    }
</script>
}